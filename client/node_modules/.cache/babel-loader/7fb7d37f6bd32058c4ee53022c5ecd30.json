{"ast":null,"code":"var _jsxFileName = \"/Users/raissadamasceno/Desktop/rummo-challenge/client/src/components/CarsList/CarsList.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport CarsCard from './../CarsCard/CarsCard';\nimport SearchCar from './../Search/SearchCar';\nimport './CarsList.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst apiUrl = 'http://localhost:8000/api/cars';\n\nfunction CardList() {\n  _s();\n\n  const [allCars, setAllCars] = useState([]);\n  const [cars, setCars] = useState([]);\n  const [isCarArrEmpty, setCarArrEmpty] = useState(false);\n\n  const getAllCars = async () => {\n    try {\n      const response = await fetch(apiUrl);\n      const data = await response.json();\n      setCars(data);\n      setAllCars(data);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    getAllCars();\n  }, []);\n\n  const searchCarList = query => {\n    let searchCars = allCars.filter(carsFilter => {\n      return carsFilter.BRAND.toLowerCase().includes(query.toLowerCase());\n    });\n\n    if (searchCars.length === 0) {\n      setCarArrEmpty(true);\n    }\n\n    setCars(searchCars);\n  };\n\n  const sortByBrand = () => {\n    const arrByBrand = [...cars].sort((a, b) => a.BRAND > b.BRAND ? 1 : -1); //console.log(arrByName)\n\n    setCars(arrByBrand);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container-list\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search\",\n      children: /*#__PURE__*/_jsxDEV(SearchCar, {\n        carList: searchCarList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn\",\n      onClick: sortByBrand,\n      children: \"Sort By Name\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"car-list\",\n      children: isCarArrEmpty ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \" N\\xE3o Encontrado\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this) : cars.map((oneCar, index) => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(CarsCard, {\n            cars: oneCar\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 33\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 29\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this);\n}\n\n_s(CardList, \"rsSbJaYWYZ7LfZlgbubyzvK2PAQ=\");\n\n_c = CardList;\nexport default CardList;\n\nvar _c;\n\n$RefreshReg$(_c, \"CardList\");","map":{"version":3,"sources":["/Users/raissadamasceno/Desktop/rummo-challenge/client/src/components/CarsList/CarsList.js"],"names":["useState","useEffect","CarsCard","SearchCar","apiUrl","CardList","allCars","setAllCars","cars","setCars","isCarArrEmpty","setCarArrEmpty","getAllCars","response","fetch","data","json","error","console","log","searchCarList","query","searchCars","filter","carsFilter","BRAND","toLowerCase","includes","length","sortByBrand","arrByBrand","sort","a","b","map","oneCar","index"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,SAAP,MAAsB,uBAAtB;AACA,OAAO,gBAAP;;AAEA,MAAMC,MAAM,GAAG,gCAAf;;AAEA,SAASC,QAAT,GAAoB;AAAA;;AAChB,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBP,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACQ,IAAD,EAAOC,OAAP,IAAkBT,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACU,aAAD,EAAgBC,cAAhB,IAAkCX,QAAQ,CAAC,KAAD,CAAhD;;AAEA,QAAMY,UAAU,GAAG,YAAY;AAC3B,QAAI;AACA,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACV,MAAD,CAA5B;AACA,YAAMW,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;AACAP,MAAAA,OAAO,CAACM,IAAD,CAAP;AACAR,MAAAA,UAAU,CAACQ,IAAD,CAAV;AAEH,KAND,CAME,OAAOE,KAAP,EAAc;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH;AACJ,GAVD;;AAYAhB,EAAAA,SAAS,CAAC,MAAM;AACZW,IAAAA,UAAU;AACb,GAFQ,EAEN,EAFM,CAAT;;AAIA,QAAMQ,aAAa,GAAIC,KAAD,IAAW;AAC7B,QAAIC,UAAU,GAAGhB,OAAO,CAACiB,MAAR,CAAgBC,UAAD,IAAgB;AAC5C,aAAOA,UAAU,CAACC,KAAX,CAAiBC,WAAjB,GAA+BC,QAA/B,CAAwCN,KAAK,CAACK,WAAN,EAAxC,CAAP;AACH,KAFgB,CAAjB;;AAIA,QAAIJ,UAAU,CAACM,MAAX,KAAsB,CAA1B,EAA6B;AACzBjB,MAAAA,cAAc,CAAC,IAAD,CAAd;AACH;;AACDF,IAAAA,OAAO,CAACa,UAAD,CAAP;AAEH,GAVD;;AAYA,QAAMO,WAAW,GAAG,MAAM;AACtB,UAAMC,UAAU,GAAG,CAAC,GAAGtB,IAAJ,EAAUuB,IAAV,CAAe,CAACC,CAAD,EAAGC,CAAH,KAAUD,CAAC,CAACP,KAAH,GAAYQ,CAAC,CAACR,KAAd,GAAsB,CAAtB,GAA0B,CAAC,CAAnD,CAAnB,CADsB,CAEtB;;AAEAhB,IAAAA,OAAO,CAACqB,UAAD,CAAP;AACD,GALH;;AAOA,sBACI;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA,4BACI;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA,6BACI,QAAC,SAAD;AAAW,QAAA,OAAO,EAAEV;AAApB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ,eAII;AAAQ,MAAA,SAAS,EAAC,KAAlB;AAAwB,MAAA,OAAO,EAAES,WAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJJ,eAKI;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA,gBACKnB,aAAa,gBACd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADc,GAERF,IAAI,CAAC0B,GAAL,CAAS,CAACC,MAAD,EAASC,KAAT,KAAmB;AAC1B,4BACI;AAAA,iCACI,QAAC,QAAD;AAAU,YAAA,IAAI,EAAED;AAAhB;AAAA;AAAA;AAAA;AAAA;AADJ,WAAUC,KAAV;AAAA;AAAA;AAAA;AAAA,gBADJ;AAKP,OANK;AAHV;AAAA;AAAA;AAAA;AAAA,YALJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAoBH;;GA5DQ/B,Q;;KAAAA,Q;AA8DT,eAAeA,QAAf","sourcesContent":["import { useState, useEffect } from 'react'\nimport CarsCard from './../CarsCard/CarsCard'\nimport SearchCar from './../Search/SearchCar'\nimport './CarsList.css'\n\nconst apiUrl = 'http://localhost:8000/api/cars'\n\nfunction CardList() {\n    const [allCars, setAllCars] = useState([])\n    const [cars, setCars] = useState([])\n    const [isCarArrEmpty, setCarArrEmpty] = useState(false);\n\n    const getAllCars = async () => {\n        try {\n            const response = await fetch(apiUrl)\n            const data = await response.json()\n            setCars(data)\n            setAllCars(data)\n\n        } catch (error) {\n            console.log(error);\n        }\n    }\n\n    useEffect(() => {\n        getAllCars()\n    }, [])\n\n    const searchCarList = (query) => {\n        let searchCars = allCars.filter((carsFilter) => {\n            return carsFilter.BRAND.toLowerCase().includes(query.toLowerCase())\n        })\n\n        if (searchCars.length === 0) {\n            setCarArrEmpty(true)\n        }\n        setCars(searchCars)\n\n    }\n\n    const sortByBrand = () => {\n        const arrByBrand = [...cars].sort((a,b) => (a.BRAND) > b.BRAND ? 1 : -1)\n        //console.log(arrByName)\n    \n        setCars(arrByBrand)\n      }\n\n    return (\n        <div className='container-list'>\n            <div className='search'>\n                <SearchCar carList={searchCarList} />\n            </div>\n            <button className=\"btn\" onClick={sortByBrand}>Sort By Name</button>\n            <div className=\"car-list\">\n                {isCarArrEmpty ? \n                <p> NÃ£o Encontrado</p>\n                    : cars.map((oneCar, index) => {\n                        return (\n                            <div key={index}>\n                                <CarsCard cars={oneCar} />\n                            </div>\n                        )\n                })\n            }\n            </div>\n        </div>\n    )\n}\n\nexport default CardList;"]},"metadata":{},"sourceType":"module"}