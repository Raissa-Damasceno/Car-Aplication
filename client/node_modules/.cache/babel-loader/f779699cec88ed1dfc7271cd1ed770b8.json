{"ast":null,"code":"var _jsxFileName = \"/Users/raissadamasceno/Desktop/rummo-challenge/client/src/components/CarsList/CarsList.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport CarsCard from './../CarsCard/CarsCard';\nimport SearchCar from './../Search/SearchCar';\nimport './CarsList.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst apiUrl = 'http://localhost:8000/api/cars';\n\nfunction CardList() {\n  _s();\n\n  const [cars, setCars] = useState([]);\n  const [searchCar, setSearchCar] = useState('');\n  console.log(searchCar);\n\n  const getAllCars = async () => {\n    try {\n      const response = await fetch(apiUrl);\n      const data = await response.json();\n      setCars(data);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    getAllCars();\n  }, []);\n\n  const handleChange = event => {\n    if (!event.target.value) {\n      return setSearchCar === '';\n    }\n\n    const filterCars = cars.filter(val => val.BRAND.includes(event.target.value));\n    setSearchCar(filterCars);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"car-list\",\n    children: [/*#__PURE__*/_jsxDEV(SearchCar, {\n      props: \"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this), cars.map(oneCar => {\n      return /*#__PURE__*/_jsxDEV(CarsCard, {\n        cars: oneCar\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 21\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n}\n\n_s(CardList, \"DXsRe2dEML/ZTJIOtZudd0x1saM=\");\n\n_c = CardList;\nexport default CardList;\n\nvar _c;\n\n$RefreshReg$(_c, \"CardList\");","map":{"version":3,"sources":["/Users/raissadamasceno/Desktop/rummo-challenge/client/src/components/CarsList/CarsList.js"],"names":["useState","useEffect","CarsCard","SearchCar","apiUrl","CardList","cars","setCars","searchCar","setSearchCar","console","log","getAllCars","response","fetch","data","json","error","handleChange","event","target","value","filterCars","filter","val","BRAND","includes","map","oneCar"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,SAAP,MAAsB,uBAAtB;AACA,OAAO,gBAAP;;AAEA,MAAMC,MAAM,GAAG,gCAAf;;AAEA,SAASC,QAAT,GAAoB;AAAA;;AAChB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACQ,SAAD,EAAYC,YAAZ,IAA4BT,QAAQ,CAAC,EAAD,CAA1C;AACAU,EAAAA,OAAO,CAACC,GAAR,CAAYH,SAAZ;;AAEA,QAAMI,UAAU,GAAG,YAAY;AAC3B,QAAI;AACA,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACV,MAAD,CAA5B;AACA,YAAMW,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;AACAT,MAAAA,OAAO,CAACQ,IAAD,CAAP;AAEH,KALD,CAKE,OAAOE,KAAP,EAAc;AACZP,MAAAA,OAAO,CAACC,GAAR,CAAYM,KAAZ;AACH;AACJ,GATD;;AAWAhB,EAAAA,SAAS,CAAC,MAAM;AACZW,IAAAA,UAAU;AACb,GAFQ,EAEN,EAFM,CAAT;;AAIA,QAAMM,YAAY,GAAIC,KAAD,IAAW;AAC5B,QAAG,CAACA,KAAK,CAACC,MAAN,CAAaC,KAAjB,EAAuB;AACvB,aAAOZ,YAAY,KAAK,EAAxB;AACC;;AAED,UAAMa,UAAU,GAAGhB,IAAI,CAACiB,MAAL,CAAaC,GAAD,IAASA,GAAG,CAACC,KAAJ,CAAUC,QAAV,CAAmBP,KAAK,CAACC,MAAN,CAAaC,KAAhC,CAArB,CAAnB;AAEAZ,IAAAA,YAAY,CAACa,UAAD,CAAZ;AAGH,GAVD;;AAYA,sBACI;AAAK,IAAA,SAAS,EAAE,UAAhB;AAAA,4BAEA,QAAC,SAAD;AAAW,MAAA,KAAK,EAAC;AAAjB;AAAA;AAAA;AAAA;AAAA,YAFA,EAIKhB,IAAI,CAACqB,GAAL,CAAUC,MAAD,IAAY;AAClB,0BACI,QAAC,QAAD;AAAU,QAAA,IAAI,EAAEA;AAAhB;AAAA;AAAA;AAAA;AAAA,cADJ;AAGH,KAJA,CAJL;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAYH;;GA5CQvB,Q;;KAAAA,Q;AA8CT,eAAeA,QAAf","sourcesContent":["import { useState, useEffect } from 'react'\nimport CarsCard from './../CarsCard/CarsCard'\nimport SearchCar from './../Search/SearchCar'\nimport './CarsList.css'\n\nconst apiUrl = 'http://localhost:8000/api/cars'\n\nfunction CardList() {\n    const [cars, setCars] = useState([])\n    const [searchCar, setSearchCar] = useState('')\n    console.log(searchCar);\n\n    const getAllCars = async () => {\n        try {\n            const response = await fetch(apiUrl)\n            const data = await response.json()\n            setCars(data)\n\n        } catch (error) {\n            console.log(error);\n        }\n    }\n\n    useEffect(() => {\n        getAllCars()\n    }, [])\n\n    const handleChange = (event) => {\n        if(!event.target.value){\n        return setSearchCar === ''\n        }\n        \n        const filterCars = cars.filter((val) => val.BRAND.includes(event.target.value)) \n\n        setSearchCar(filterCars)\n        \n\n    }\n\n    return (\n        <div className= \"car-list\">\n\n        <SearchCar props=''/>\n\n            {cars.map((oneCar) => { \n                return (\n                    <CarsCard cars={oneCar} />\n                )\n            })}\n        </div>\n    )\n}\n\nexport default CardList;"]},"metadata":{},"sourceType":"module"}