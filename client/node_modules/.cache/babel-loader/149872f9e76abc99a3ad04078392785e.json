{"ast":null,"code":"var _jsxFileName = \"/Users/raissadamasceno/Desktop/rummo-challenge/client/src/components/CarsList/CarsList.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport CarsCard from './../CarsCard/CarsCard';\nimport SearchCar from './../Search/SearchCar';\nimport './CarsList.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst apiUrl = 'http://localhost:8000/api/cars';\n\nfunction CardList() {\n  _s();\n\n  const [initCars, setInitCars] = useState([]);\n  const [repos, setRepos] = useState([]);\n\n  const getAllCars = async () => {\n    try {\n      const response = await fetch(apiUrl);\n      const data = await response.json();\n      setInitCars(data);\n      setRepos(data);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    getAllCars();\n  }, []);\n\n  const handleChange = event => {\n    if (!event.target.value) {\n      setRepos(initCars);\n      return;\n    }\n\n    const filterCars = cars.filter(val => val.BRAND.includes(event.target.value));\n    setCars(filterCars);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"car-list\",\n    children: [/*#__PURE__*/_jsxDEV(SearchCar, {\n      props: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this), cars.map((oneCar, index) => {\n      return /*#__PURE__*/_jsxDEV(CarsCard, {\n        cars: oneCar\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 21\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n}\n\n_s(CardList, \"YuHpexjibzMpnyZTnqEGhzY/s8I=\");\n\n_c = CardList;\nexport default CardList;\n\nvar _c;\n\n$RefreshReg$(_c, \"CardList\");","map":{"version":3,"sources":["/Users/raissadamasceno/Desktop/rummo-challenge/client/src/components/CarsList/CarsList.js"],"names":["useState","useEffect","CarsCard","SearchCar","apiUrl","CardList","initCars","setInitCars","repos","setRepos","getAllCars","response","fetch","data","json","error","console","log","handleChange","event","target","value","filterCars","cars","filter","val","BRAND","includes","setCars","map","oneCar","index"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,SAAP,MAAsB,uBAAtB;AACA,OAAO,gBAAP;;AAEA,MAAMC,MAAM,GAAG,gCAAf;;AAEA,SAASC,QAAT,GAAoB;AAAA;;AAChB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BP,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACQ,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,EAAD,CAAlC;;AAEA,QAAMU,UAAU,GAAG,YAAY;AAC3B,QAAI;AACA,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACR,MAAD,CAA5B;AACA,YAAMS,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;AACAP,MAAAA,WAAW,CAACM,IAAD,CAAX;AACAJ,MAAAA,QAAQ,CAACI,IAAD,CAAR;AAEH,KAND,CAME,OAAOE,KAAP,EAAc;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH;AACJ,GAVD;;AAYAd,EAAAA,SAAS,CAAC,MAAM;AACZS,IAAAA,UAAU;AACb,GAFQ,EAEN,EAFM,CAAT;;AAIA,QAAMQ,YAAY,GAAIC,KAAD,IAAW;AAC5B,QAAG,CAACA,KAAK,CAACC,MAAN,CAAaC,KAAjB,EAAuB;AACnBZ,MAAAA,QAAQ,CAACH,QAAD,CAAR;AACJ;AACC;;AAED,UAAMgB,UAAU,GAAGC,IAAI,CAACC,MAAL,CAAaC,GAAD,IAASA,GAAG,CAACC,KAAJ,CAAUC,QAAV,CAAmBR,KAAK,CAACC,MAAN,CAAaC,KAAhC,CAArB,CAAnB;AAEAO,IAAAA,OAAO,CAACN,UAAD,CAAP;AAGH,GAXD;;AAaA,sBACI;AAAK,IAAA,SAAS,EAAE,UAAhB;AAAA,4BAEA,QAAC,SAAD;AAAW,MAAA,KAAK,EAAEJ;AAAlB;AAAA;AAAA;AAAA;AAAA,YAFA,EAIKK,IAAI,CAACM,GAAL,CAAS,CAACC,MAAD,EAASC,KAAT,KAAmB;AACzB,0BACI,QAAC,QAAD;AAAU,QAAA,IAAI,EAAED;AAAhB;AAAA;AAAA;AAAA;AAAA,cADJ;AAGH,KAJA,CAJL;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAYH;;GA7CQzB,Q;;KAAAA,Q;AA+CT,eAAeA,QAAf","sourcesContent":["import { useState, useEffect } from 'react'\nimport CarsCard from './../CarsCard/CarsCard'\nimport SearchCar from './../Search/SearchCar'\nimport './CarsList.css'\n\nconst apiUrl = 'http://localhost:8000/api/cars'\n\nfunction CardList() {\n    const [initCars, setInitCars] = useState([])\n    const [repos, setRepos] = useState([])\n\n    const getAllCars = async () => {\n        try {\n            const response = await fetch(apiUrl)\n            const data = await response.json()\n            setInitCars(data)\n            setRepos(data)\n\n        } catch (error) {\n            console.log(error);\n        }\n    }\n\n    useEffect(() => {\n        getAllCars()\n    }, [])\n\n    const handleChange = (event) => {\n        if(!event.target.value){\n            setRepos(initCars)\n        return\n        }\n        \n        const filterCars = cars.filter((val) => val.BRAND.includes(event.target.value)) \n\n        setCars(filterCars)\n        \n\n    }\n\n    return (\n        <div className= \"car-list\">\n\n        <SearchCar props={handleChange}/>\n\n            {cars.map((oneCar, index) => { \n                return (\n                    <CarsCard cars={oneCar} />\n                )\n            })}\n        </div>\n    )\n}\n\nexport default CardList;"]},"metadata":{},"sourceType":"module"}