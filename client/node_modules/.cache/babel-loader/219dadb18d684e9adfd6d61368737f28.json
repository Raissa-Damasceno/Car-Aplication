{"ast":null,"code":"var _jsxFileName = \"/Users/raissadamasceno/Desktop/rummo-challenge/client/src/components/Test.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/CardContent';\nimport Typography from '@mui/material/Typography';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst apiUrl = 'http://localhost:8000/api/cars';\nexport default function BasicCard() {\n  _s();\n\n  const [cars, setCars] = useState([]);\n\n  const getAllCars = async () => {\n    try {\n      const response = await fetch(apiUrl);\n      const data = await response.json();\n      setCars(data);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    getAllCars();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: /*#__PURE__*/_jsxDEV(CardContent, {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        sx: {\n          fontSize: 25\n        },\n        children: \"Word of the Day\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        component: \"div\",\n        children: \"benevolent\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        sx: {\n          mb: 1.5\n        },\n        color: \"text.secondary\",\n        children: \"adjective\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n}\n\n_s(BasicCard, \"/EQt6wAxOgtQYDavlJ/SWb5B/tI=\");\n\n_c = BasicCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"BasicCard\");","map":{"version":3,"sources":["/Users/raissadamasceno/Desktop/rummo-challenge/client/src/components/Test.js"],"names":["useState","useEffect","Card","CardContent","Typography","apiUrl","BasicCard","cars","setCars","getAllCars","response","fetch","data","json","error","console","log","fontSize","mb"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;;AAEA,MAAMC,MAAM,GAAG,gCAAf;AAEA,eAAe,SAASC,SAAT,GAAqB;AAAA;;AAChC,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAAC,EAAD,CAAhC;;AAEA,QAAMS,UAAU,GAAG,YAAY;AAC3B,QAAI;AACA,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACN,MAAD,CAA5B;AACA,YAAMO,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;AACAL,MAAAA,OAAO,CAACI,IAAD,CAAP;AAEH,KALD,CAKE,OAAOE,KAAP,EAAc;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH;AACJ,GATD;;AAWAb,EAAAA,SAAS,CAAC,MAAM;AACZQ,IAAAA,UAAU;AACb,GAFQ,EAEN,EAFM,CAAT;AAIA,sBACI,QAAC,IAAD;AAAA,2BACI,QAAC,WAAD;AAAA,8BACI,QAAC,UAAD;AAAY,QAAA,EAAE,EAAE;AAAEQ,UAAAA,QAAQ,EAAE;AAAZ,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAII,QAAC,UAAD;AAAY,QAAA,OAAO,EAAC,IAApB;AAAyB,QAAA,SAAS,EAAC,KAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJJ,eAOI,QAAC,UAAD;AAAY,QAAA,EAAE,EAAE;AAAEC,UAAAA,EAAE,EAAE;AAAN,SAAhB;AAA6B,QAAA,KAAK,EAAC,gBAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAPJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAeH;;GAjCuBZ,S;;KAAAA,S","sourcesContent":["import { useState, useEffect } from 'react'\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/CardContent';\nimport Typography from '@mui/material/Typography';\n\nconst apiUrl = 'http://localhost:8000/api/cars'\n\nexport default function BasicCard() {\n    const [cars, setCars] = useState([])\n\n    const getAllCars = async () => {\n        try {\n            const response = await fetch(apiUrl)\n            const data = await response.json()\n            setCars(data)\n\n        } catch (error) {\n            console.log(error);\n        }\n    }\n\n    useEffect(() => {\n        getAllCars()\n    }, [])\n\n    return (\n        <Card>\n            <CardContent>\n                <Typography sx={{ fontSize: 25 }}>\n                    Word of the Day\n                </Typography>\n                <Typography variant=\"h5\" component=\"div\">\n                    benevolent\n                </Typography>\n                <Typography sx={{ mb: 1.5 }} color=\"text.secondary\">\n                    adjective\n                </Typography>\n            </CardContent>\n        </Card>\n    );\n}"]},"metadata":{},"sourceType":"module"}