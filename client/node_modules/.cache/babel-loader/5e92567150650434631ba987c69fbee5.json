{"ast":null,"code":"var _jsxFileName = \"/Users/raissadamasceno/Desktop/rummo-challenge/client/src/components/CarsList/CarsList.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport CarsCard from './../CarsCard/CarsCard';\nimport SearchCar from './../Search/SearchCar';\nimport Pagination from '../Pagination/Pagination';\nimport { Button } from 'react-bootstrap';\nimport './CarsList.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst apiUrl = 'http://localhost:8000/api/cars';\n\nfunction CardList() {\n  _s();\n\n  const [isCarArrEmpty, setCarArrEmpty] = useState(false);\n  const [allCars, setAllCars] = useState([]);\n  const [cars, setCars] = useState([]);\n  const [itensPage, setItensPage] = useState(3);\n  const [currentPage, setCurrentPage] = useState(0);\n  const pages = Math.ceil(cars.length / itensPage);\n  const startIndex = currentPage * itensPage;\n  const endIndex = startIndex + itensPage;\n  const currentItens = cars.slice(startIndex, endIndex);\n\n  const getAllCars = async () => {\n    try {\n      const response = await fetch(apiUrl);\n      const data = await response.json();\n      setCars(data);\n      setAllCars(data);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    getAllCars();\n  }, []);\n\n  const searchCarList = query => {\n    let searchCars = allCars.filter(carsFilter => {\n      return carsFilter.BRAND.toLowerCase().includes(query.toLowerCase());\n    });\n\n    if (searchCars.length === 0) {\n      setCarArrEmpty(true);\n    }\n\n    setCars(searchCars);\n  };\n\n  const sortByBrand = () => {\n    const arrByBrand = [...cars].sort((a, b) => a.BRAND > b.BRAND ? 1 : -1);\n    setCars(arrByBrand);\n  };\n\n  const sortByBrand2 = () => {\n    const arrByBrand2 = [...cars].sort((a, b) => a.BRAND < b.BRAND ? 1 : -1); //console.log(arrByName)\n\n    setCars(arrByBrand2);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search\",\n      children: /*#__PURE__*/_jsxDEV(SearchCar, {\n        carList: searchCarList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"car-list\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"orderBy\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"btn\",\n          children: \"Order By:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          className: \"btn\",\n          onClick: sortByBrand,\n          children: \"Brand A-Z\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          className: \"btn\",\n          onClick: sortByBrand2,\n          children: \"Brand A-Z\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this), isCarArrEmpty ? currentItens.map((oneCar, index) => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(CarsCard, {\n            cars: oneCar\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 33\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 29\n        }, this);\n      }) : currentItens.map((oneCar, index) => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(CarsCard, {\n            cars: oneCar\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 33\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 29\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(Pagination, {\n        pages: pages,\n        setCurrentPage: setCurrentPage,\n        currentPage: currentPage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"currentPage\",\n      children: [currentPage + 1, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 9\n  }, this);\n}\n\n_s(CardList, \"1TDy4MxP4ppqYrc45PToOFox2zw=\");\n\n_c = CardList;\nexport default CardList;\n\nvar _c;\n\n$RefreshReg$(_c, \"CardList\");","map":{"version":3,"sources":["/Users/raissadamasceno/Desktop/rummo-challenge/client/src/components/CarsList/CarsList.js"],"names":["useState","useEffect","CarsCard","SearchCar","Pagination","Button","apiUrl","CardList","isCarArrEmpty","setCarArrEmpty","allCars","setAllCars","cars","setCars","itensPage","setItensPage","currentPage","setCurrentPage","pages","Math","ceil","length","startIndex","endIndex","currentItens","slice","getAllCars","response","fetch","data","json","error","console","log","searchCarList","query","searchCars","filter","carsFilter","BRAND","toLowerCase","includes","sortByBrand","arrByBrand","sort","a","b","sortByBrand2","arrByBrand2","map","oneCar","index"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react'\nimport CarsCard from './../CarsCard/CarsCard'\nimport SearchCar from './../Search/SearchCar'\nimport Pagination from '../Pagination/Pagination'\nimport { Button } from 'react-bootstrap'\nimport './CarsList.css'\n\nconst apiUrl = 'http://localhost:8000/api/cars'\n\nfunction CardList() {\n    const [isCarArrEmpty, setCarArrEmpty] = useState(false);\n    const [allCars, setAllCars] = useState([])\n\n    const [cars, setCars] = useState([])\n    const [itensPage, setItensPage] = useState(3)\n    const [currentPage, setCurrentPage] = useState(0)\n    \n    const pages = Math.ceil(cars.length / itensPage)\n    const startIndex = currentPage * itensPage\n    const endIndex = startIndex + itensPage\n    const currentItens = cars.slice(startIndex, endIndex)\n\n\n    const getAllCars = async () => {\n        try {\n            const response = await fetch(apiUrl)\n            const data = await response.json()\n            setCars(data)\n            setAllCars(data)\n\n        } catch (error) {\n            console.log(error);\n        }\n    }\n\n    useEffect(() => {\n        getAllCars()\n    }, [])\n\n    const searchCarList = (query) => {\n        let searchCars = allCars.filter((carsFilter) => {\n            return carsFilter.BRAND.toLowerCase().includes(query.toLowerCase())\n        })\n\n        if (searchCars.length === 0) {\n            setCarArrEmpty(true)\n        }\n        setCars(searchCars)\n\n    }\n\n    const sortByBrand = () => {\n        const arrByBrand = [...cars].sort((a, b) => (a.BRAND) > b.BRAND ? 1 : -1)\n        setCars(arrByBrand)\n    }\n\n    const sortByBrand2 = () => {\n        const arrByBrand2 = [...cars].sort((a, b) => (a.BRAND) < b.BRAND ? 1 : -1)\n        //console.log(arrByName)\n\n        setCars(arrByBrand2)\n    }\n\n\n    return (\n        <div className='container'>\n            <div className='search'>\n                <SearchCar carList={searchCarList} />\n            </div>\n\n            <div className=\"car-list\">\n                <div className=\"orderBy\">\n                    <div className=\"btn\">\n                        Order By:\n                    </div>\n                    <Button className=\"btn\" onClick={sortByBrand}>Brand A-Z</Button>\n                    <Button className=\"btn\" onClick={sortByBrand2}>Brand A-Z</Button>\n                </div>\n                {isCarArrEmpty ?\n                    currentItens.map((oneCar, index) => {\n                        return (\n                            <div key={index}>\n                                <CarsCard cars={oneCar} />\n                            </div>\n                        )\n                    })\n                    : currentItens.map((oneCar, index) => {\n                        return (\n                            <div key={index}>\n                                <CarsCard cars={oneCar} />\n                            </div>\n                        )\n                    })\n                }\n                <Pagination pages={pages} setCurrentPage={setCurrentPage} currentPage={currentPage} />\n\n            </div>\n\n            <div className='currentPage'>\n                {currentPage + 1}\n                <br />\n            </div>\n        </div>\n    )\n}\n\nexport default CardList; "]},"metadata":{},"sourceType":"module"}