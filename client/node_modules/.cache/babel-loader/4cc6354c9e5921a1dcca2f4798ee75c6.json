{"ast":null,"code":"var _jsxFileName = \"/Users/raissadamasceno/Desktop/rummo-challenge/client/src/components/CarsList/CarsList.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport CarsCard from './../CarsCard/CarsCard';\nimport SearchCar from './../Search/SearchCar';\nimport './CarsList.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst apiUrl = 'http://localhost:8000/api/cars';\n\nfunction CardList() {\n  _s();\n\n  const [allCars, setAllCars] = useState([]);\n  const [cars, setCars] = useState([]);\n  const [isCarArrEmpty, setCarArrEmpty] = useState(false);\n  const [itensPage, setItensPage] = useState(6);\n  const [currentPage, setCurrentPage] = useState(0);\n  console.log(setCurrentPage);\n\n  const getAllCars = async () => {\n    try {\n      const response = await fetch(apiUrl);\n      const data = await response.json();\n      setCars(data);\n      setAllCars(data);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    getAllCars();\n  }, []);\n\n  const searchCarList = query => {\n    let searchCars = allCars.filter(carsFilter => {\n      return carsFilter.BRAND.toLowerCase().includes(query.toLowerCase());\n    });\n\n    if (searchCars.length === 0) {\n      setCarArrEmpty(true);\n    }\n\n    setCars(searchCars);\n  };\n\n  const sortByBrand = () => {\n    const arrByBrand = [...cars].sort((a, b) => a.BRAND > b.BRAND ? 1 : -1); //console.log(arrByName)\n\n    setCars(arrByBrand);\n  };\n\n  const sortByBrand2 = () => {\n    const arrByBrand2 = [...cars].sort((a, b) => a.BRAND < b.BRAND ? 1 : -1); //console.log(arrByName)\n\n    setCars(arrByBrand2);\n  };\n\n  const pages = Math.ceil(cars.length / itensPage);\n  const startIndex = currentPage * itensPage;\n  const endIndex = startIndex + itensPage;\n  const currentItens = cars.slice(startIndex, endIndex);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container-list\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: Array.from(Array(pages), (item, index) => {\n        return /*#__PURE__*/_jsxDEV(\"button\", {\n          value: index,\n          onclick: event => setCurrentPage(Number(event.target.value)),\n          children: \"3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 28\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search\",\n      children: /*#__PURE__*/_jsxDEV(SearchCar, {\n        carList: searchCarList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn\",\n      onClick: sortByBrand,\n      children: \"A-Z\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn\",\n      onClick: sortByBrand2,\n      children: \"Z-A\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"car-list\",\n      children: isCarArrEmpty ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \" N\\xE3o Encontrado\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 21\n      }, this) : currentItens.map((oneCar, index) => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(CarsCard, {\n            cars: oneCar\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 33\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 29\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 9\n  }, this);\n}\n\n_s(CardList, \"ooysiWUz4vzXEbZg9P2v6BhDfDY=\");\n\n_c = CardList;\nexport default CardList;\n\nvar _c;\n\n$RefreshReg$(_c, \"CardList\");","map":{"version":3,"sources":["/Users/raissadamasceno/Desktop/rummo-challenge/client/src/components/CarsList/CarsList.js"],"names":["useState","useEffect","CarsCard","SearchCar","apiUrl","CardList","allCars","setAllCars","cars","setCars","isCarArrEmpty","setCarArrEmpty","itensPage","setItensPage","currentPage","setCurrentPage","console","log","getAllCars","response","fetch","data","json","error","searchCarList","query","searchCars","filter","carsFilter","BRAND","toLowerCase","includes","length","sortByBrand","arrByBrand","sort","a","b","sortByBrand2","arrByBrand2","pages","Math","ceil","startIndex","endIndex","currentItens","slice","Array","from","item","index","event","Number","target","value","map","oneCar"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react'\nimport CarsCard from './../CarsCard/CarsCard'\nimport SearchCar from './../Search/SearchCar'\nimport './CarsList.css'\n\nconst apiUrl = 'http://localhost:8000/api/cars'\n\nfunction CardList() {\n    const [allCars, setAllCars] = useState([])\n    const [cars, setCars] = useState([])\n    const [isCarArrEmpty, setCarArrEmpty] = useState(false);\n\n    const [itensPage, setItensPage] = useState(6)\n    const [currentPage, setCurrentPage] = useState(0)\n    console.log(setCurrentPage);\n\n\n    const getAllCars = async () => {\n        try {\n            const response = await fetch(apiUrl)\n            const data = await response.json()\n            setCars(data)\n            setAllCars(data)\n\n        } catch (error) {\n            console.log(error);\n        }\n    }\n\n    useEffect(() => {\n        getAllCars()\n    }, [])\n\n    const searchCarList = (query) => {\n        let searchCars = allCars.filter((carsFilter) => {\n            return carsFilter.BRAND.toLowerCase().includes(query.toLowerCase())\n        })\n\n        if (searchCars.length === 0) {\n            setCarArrEmpty(true)\n        }\n        setCars(searchCars)\n\n    }\n\n    const sortByBrand = () => {\n        const arrByBrand = [...cars].sort((a, b) => (a.BRAND) > b.BRAND ? 1 : -1)\n        //console.log(arrByName)\n\n        setCars(arrByBrand)\n    }\n\n    const sortByBrand2 = () => {\n        const arrByBrand2 = [...cars].sort((a, b) => (a.BRAND) < b.BRAND ? 1 : -1)\n        //console.log(arrByName)\n\n        setCars(arrByBrand2)\n    }\n\n    const pages = Math.ceil(cars.length / itensPage)\n    const startIndex = currentPage * itensPage\n    const endIndex = startIndex + itensPage\n    const currentItens = cars.slice(startIndex, endIndex)\n    \n    return (\n        <div className='container-list'>\n            <div>\n                {Array.from(Array(pages), (item, index) => {\n                    return <button value={index} onclick={(event) => setCurrentPage(Number(event.target.value))}>3</button>\n                })}\n            </div>\n\n            <div className='search'>\n                <SearchCar carList={searchCarList} />\n            </div>\n\n            <button className=\"btn\" onClick={sortByBrand}>A-Z</button>\n            <button className=\"btn\" onClick={sortByBrand2}>Z-A</button>\n\n            <div className=\"car-list\">\n                {isCarArrEmpty ?\n                    <p> Não Encontrado</p>\n                    : currentItens.map((oneCar, index) => {\n                        return (\n                            <div key={index}>\n                                <CarsCard cars={oneCar} />\n                            </div>\n                        )\n                    })\n                }\n            </div>\n        </div>\n    )\n}\n\nexport default CardList;"]},"metadata":{},"sourceType":"module"}