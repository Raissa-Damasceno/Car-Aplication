{"ast":null,"code":"var _jsxFileName = \"/Users/raissadamasceno/Desktop/rummo-challenge/client/src/components/Test.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/CardContent';\nimport Typography from '@mui/material/Typography';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst apiUrl = 'http://localhost:8000/api/cars';\nexport default function BasicCard() {\n  _s();\n\n  const [cars, setCars] = useState([]);\n\n  const getAllCars = async () => {\n    try {\n      const response = await fetch(apiUrl);\n      const data = await response.json();\n      setCars(data);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    getAllCars();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"cardGeral\",\n    children: cars.map(oneCar => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card\",\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: /*#__PURE__*/_jsxDEV(CardContent, {\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              children: oneCar.BRAND\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              children: oneCar.MODEL\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              children: oneCar.DEALER\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              children: oneCar.MIN_MILEAGE\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              children: oneCar.MAX_MILEAGE\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 21\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n}\n\n_s(BasicCard, \"/EQt6wAxOgtQYDavlJ/SWb5B/tI=\");\n\n_c = BasicCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"BasicCard\");","map":{"version":3,"sources":["/Users/raissadamasceno/Desktop/rummo-challenge/client/src/components/Test.js"],"names":["useState","useEffect","Card","CardContent","Typography","apiUrl","BasicCard","cars","setCars","getAllCars","response","fetch","data","json","error","console","log","map","oneCar","BRAND","MODEL","DEALER","MIN_MILEAGE","MAX_MILEAGE"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;;AAEA,MAAMC,MAAM,GAAG,gCAAf;AAEA,eAAe,SAASC,SAAT,GAAqB;AAAA;;AAChC,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAAC,EAAD,CAAhC;;AAEA,QAAMS,UAAU,GAAG,YAAY;AAC3B,QAAI;AACA,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACN,MAAD,CAA5B;AACA,YAAMO,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;AACAL,MAAAA,OAAO,CAACI,IAAD,CAAP;AAEH,KALD,CAKE,OAAOE,KAAP,EAAc;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH;AACJ,GATD;;AAWAb,EAAAA,SAAS,CAAC,MAAM;AACZQ,IAAAA,UAAU;AACb,GAFQ,EAEN,EAFM,CAAT;AAIA,sBACI;AAAK,IAAA,SAAS,EAAG,WAAjB;AAAA,cAEIF,IAAI,CAACU,GAAL,CAAUC,MAAD,IAAY;AACjB,0BACI;AAAK,QAAA,SAAS,EAAG,MAAjB;AAAA,+BACI,QAAC,IAAD;AAAA,iCACI,QAAC,WAAD;AAAA,oCACI,QAAC,UAAD;AAAA,wBACCA,MAAM,CAACC;AADR;AAAA;AAAA;AAAA;AAAA,oBADJ,eAII,QAAC,UAAD;AAAA,wBACCD,MAAM,CAACE;AADR;AAAA;AAAA;AAAA;AAAA,oBAJJ,eAOI,QAAC,UAAD;AAAA,wBACCF,MAAM,CAACG;AADR;AAAA;AAAA;AAAA;AAAA,oBAPJ,eAUI,QAAC,UAAD;AAAA,wBACCH,MAAM,CAACI;AADR;AAAA;AAAA;AAAA;AAAA,oBAVJ,eAaI,QAAC,UAAD;AAAA,wBACCJ,MAAM,CAACK;AADR;AAAA;AAAA;AAAA;AAAA,oBAbJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ;AAuBH,KAxBD;AAFJ;AAAA;AAAA;AAAA;AAAA,UADJ;AA+BH;;GAjDuBjB,S;;KAAAA,S","sourcesContent":["import { useState, useEffect } from 'react'\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/CardContent';\nimport Typography from '@mui/material/Typography';\n\nconst apiUrl = 'http://localhost:8000/api/cars'\n\nexport default function BasicCard() {\n    const [cars, setCars] = useState([])\n\n    const getAllCars = async () => {\n        try {\n            const response = await fetch(apiUrl)\n            const data = await response.json()\n            setCars(data)\n\n        } catch (error) {\n            console.log(error);\n        }\n    }\n\n    useEffect(() => {\n        getAllCars()\n    }, [])\n\n    return (\n        <div className = 'cardGeral'>\n        {\n            cars.map((oneCar) => {\n                return (\n                    <div className = 'card'>\n                        <Card>\n                            <CardContent>\n                                <Typography>\n                                {oneCar.BRAND}\n                                </Typography>\n                                <Typography>\n                                {oneCar.MODEL}\n                                </Typography>\n                                <Typography>\n                                {oneCar.DEALER}\n                                </Typography>\n                                <Typography>\n                                {oneCar.MIN_MILEAGE}\n                                </Typography>\n                                <Typography>\n                                {oneCar.MAX_MILEAGE}\n                                </Typography>\n                            </CardContent>\n                        </Card>\n                    </div>\n                )\n            })\n        }\n    </div>\n    );\n}"]},"metadata":{},"sourceType":"module"}